;--------------------------AutoExecute Section--------------------------
#NoEnv  
#SingleInstance force
SendMode Input 
SetWorkingDir %A_ScriptDir% 
SetBatchLines,-1 
ListLines, off 
detectHiddenWindows, on

GameExe = ""
GamePath = ""
Process_ID = ""

GroupAdd, ForThisWinOnly, ahk_exe %GameExe%  ;The #IfWin directive doesn't support variable names. Workaround 

IfWinExist, ahk_exe %GameExe%
{   
    WinActivate, ahk_exe %GameExe%
    WinGet, Process_ID, PID, ahk_exe %GameExe% 
} 
Else 
If WinNotExist ahk_exe %GameExe%
{
    run,%GameExe%, %GamePath%,,Process_ID   
}

SetTimer ChkProcess, 5000                   ;5 second period for checking process
Return

;--------------------------AutoExecute Section End--------------------------

#IfWinActive, ahk_group ForThisWinOnly
{
;
;                                           ;Actions will be placed here
;
}
                    
ChkProcess:                                 ;Close script when process isn't active anymore
Process, Exist, %Process_ID%
If ErrorLevel = 0
Exitapp
Return


;////////////////////////Or Without the use of settimer////////////////////////

;--------------------------AutoExecute Section--------------------------
#NoEnv  
#SingleInstance force
SendMode Input 
SetWorkingDir %A_ScriptDir% ;
SetBatchLines, -1 ;
detectHiddenWindows, on

GameExe = ""
GamePath = ""
WinTitle = ""
Process_ID = ""

GroupAdd, ForThisWinOnly, %WinTitle%
GroupAdd, ForThisWinOnly, ahk_exe %GameExe%

IfWinNotExist, ahk_exe %GameExe%
{
    run,%GameExe%, %GamePath%,,Process_ID
    Process, WaitClose, %Process_ID%
    ExitApp
}
else
IfWinExist, ahk_exe %GameExe%
{
    WinActivate, ahk_exe %GameExe%
    WinGet, Process_ID, PID, ahk_exe %GameExe%
    Process, WaitClose, %Process_ID%
    ExitApp
}
#IfWinExist, ahk_group ForThisWinOnly
#IfWinActive, ahk_group ForThisWinOnly
{
                                            ;Actions will be placed here
                                            ;AutoExecute Section will end where the first return is encounterd
}
