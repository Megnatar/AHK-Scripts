;//////////////////////////Toggle Key's//////////////////////////
;When the key you sending is already a toggle enabled key. Like shift down to hold possition.
;Dont try and use that key, change it in game to something like numpad0, because the game will likely 
;get confused about keystatus is up or down if you don't change it.


Xbutton2::	           		;Using keywait and errorlevel	
KeyWait, w, T
if  Not errorlevel 
send {w down}
Else
send {w up}
Return


Xbutton2::				;Using a variable and check against itself if its true or not.
If (Autorun := !Autorun) {
send {w down}
}Else{
send {w up}
}
Return

Xbutton2::				;Using a variable and ++/-- operator. Variable bNum0 might not declare properlay underfly.
If (bNum0 = 0) {			;Declare it in the auto-execution section!
    Send {Numpad0 down}			;I prefer this toggle method since it's sollid.
    bNum0++
}Else{
    Send {Numpad0 up}
    bNum0--
}
Return
;//////////////////////////Single, Double or Down key state //////////////////////////

/*
Here I'm using Settimer to clear the variable declared as Counter. Wich holds the times/number the 'W' key
is pressed. This method is fast and does not wait for the settimer routine to reach zero like most other
examples do.
*/

~W::
if Counter = 1          ; Counter is empty the first time you press W so this will be skipped.
{                       ; Press W again then the value of counter is 1, the ++ operator increments +1
    	Counter++       ; making the value of counter 2.
}
else
{
    	Counter = 1     ; The first time W is pressed counter is empty, setting it here to 1.
	KeyWait, w      ; Waiting for W to be released making sure no looping occurs.
	settimer, ClearCounter, 200 ; This timer clears the value of counter after 200ms when W is pressed only once or pusshed down.
}
if Counter >= 2         ; Here is the double click action. Where counter holds the value of 2
{
	SendEvent, +{w} ; Some shift+w combo
        Counter =       ; Clearing the variable so it can be used again correctly.
        settimer, ClearCounter, off ; There is no need to keep the timer running so turning it off.
}
else
return

ClearCounter:
Counter =
settimer, ClearCounter, off
Return

;//////////////////////////////////////////////////////////////////////////////////////////
T::
keywait, T, T0.15
If errorlevel = 1
{
	Loop {
	LButtState := GetKeyState("T", "P")
	If (LButtState = 1)
		{
			MsgBox,,,Key is hold down,2
			KeyWait, T
			continue
		}
	If (LButtState = 0)
		{
			MsgBox key is released from down
			break
		}
	}
	return
}
else
keywait, T, D  T0.15
if errorlevel = 0
{
   MsgBox,,, Double click!,2	
}	
Return

 
 ;///////////////Same as above but with a while loop//////////////////
;Spacebar is used as the trigger key in these key examples.  

Space::
keywait, space, T0.25
if errorlevel = 1
{
	while GetKeyState("space", "P")
	{
        MsgBox key is down
	break
	}
return
}
else
keywait, space, D T0.2
if errorlevel = 0
{
    MsgBox double click
return
}
else
{
    MsgBox single click
}
return

 ;///////////////Same as above but the ~ prefix handles single click actions//////////////////
		
~Lbutton:				 
keywait, Lbutton, T0.15
if errorlevel = 1 
{
    while GetKeyState("Lbutton", "P") 
    {
        send, {Lbutton down}  
        				;Or use some other key to send while Lbutton is held down.
        KeyWait, Lbutton 
    }
    send, {Lbutton up}  
return 
}
else
keywait, Lbutton, D T0.15
if errorlevel = 0          
{
    send, {q down}			;Bubble click will send Q and W key down
    send, {w down}
    KeyWait, Lbutton
    send, {q up}			;And sending key's up again once Lbutton is released from doubleclick.
    send, {w up}
    return               
 }


;/////Same as above but in combination with a second key held down./////


AfterKeyRelease:
Secs++
Return

Space:: 
SetKeyDelay,20,20
keywait, Space, T0.25
if errorlevel = 1 
{
    While GetKeyState("Space", "P") 
    {		
        if  GetKeyState("Rbutton", "P")
        {
            KeyWait, Space, D
            MsgBox, 64, Click Actions, Rbutton and Space down:`n`nHolding down the right key button and pressing space key`, down or up depenig on keywait`, wil execute this part of the while loop. Handy for zooming`, aiming etc etc..., 30
		return
        }
        else
        {
        settimer, AfterKeyRelease, on
        KeyWait, Space
        settimer, AfterKeyRelease, off
        MsgBox, 64, Click Actions, Key down:`n`nThe Left button was down and again released after: %Secs% seconds`nHowever This part of the while loop was triggerd after 250ms .,30
        return
        }
    Break
    }
}  
else 
keywait, Space, D T0.35
if errorlevel = 0 
{
     MsgBox, 64, Click Actions, Double Click:`n`nSince neighter of the above conditions turns out to be true and a second click was detected with the "D"  option in keywait.,20
}
else
{
     MsgBox, 64, Click Actions, Single key Click:`n`nSince neighter of the above conditions turned out to be true., 10  
}
return

;

;//////////////////////////Single, Double or Tripple key state using timers //////////////////////////

MsgBoxTimeOut = 2
EveluationTime = 420
again = 1

Space::
if Counter 
{    
    Counter++
}
else
{
    Counter = 1
    SetTimer, CaptureKeyThread, %EveluationTime%
}
Return

CaptureKeyThread:
SetTimer, CaptureKeyThread, off
if Counter = 1
    {
        MsgBox,,,You pressed the key once.`n`nCan you press it twice?,%MsgBoxTimeOut%
    }
Else 
if Counter = 2
    {
        MsgBox,,,Yay you pressed the key twice.`n`nNow trie three times!,%MsgBoxTimeOut%
    }
Else 
if Counter = 3
    {        
    if again <= 3
        {
            MsgBox,,,You managed to press space 3 times once about every 140 milliseconds!.`nTry 4 times?`n`nThis attempt NR:%again%,%MsgBoxTimeOut%    
            again++
        }
        else 
        if again >= 4
        {
            MsgBox,,,Again only 3 key presses detected`nYou will never manage to hit 4 times within 420 Ms`nThough... try once more!,%MsgBoxTimeOut%
            EveluationTime = 800
        }
    }
Else 
if Counter > 3
    {

        MsgBox,,,420 milliseconds is to short for the tread to discover all the key presses!`nI've set the value of var EveluationTime to 800Ms. Timing is very importand!!!!`n`nThe script will exit after you press oke.
        gosub, ExitScript
    }
Counter =
Return

ExitScript:
ExitApp

;//////////////////////////Looping left/right clik if Lbutton is down//////////////////////////

Lbutton::
keywait, Lbutton, T0.40
if errorlevel = 1
{
    while GetKeyState("Lbutton", "P")  
    {
        send, {click down}{click up}
        sleep, 100
        send {click right down}{click right up}
        sleep, 100
    }
        keywait, Lbutton
    send, {click up}{click right up}
Return
}
if errorlevel = 0
{
	send {click}
}
return
