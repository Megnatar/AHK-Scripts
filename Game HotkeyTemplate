#NoEnv  
#SingleInstance force
SendMode Input 
SetWorkingDir %A_ScriptDir% 
SetBatchLines, -1 
ListLines, off 
detectHiddenWindows, on

GameExe = ""
GamePath = ""
SomeKey = ""
Proccess_ID = ""
bAutorun0 = ""
bAutorun1 = 0

GroupAdd, ForThisWinOnly, ahk_exe %GameExe% ;The #IfWin directive doesn't support variable names. Workaround 

IfWinExist, ahk_exe %GameExe%
{   
    WinActivate, ahk_exe %GameExe%
    WinWaitActive, ahk_exe %GameExe%
    WinGet, Proccess_ID, PID, ahk_exe %GameExe% 
} 
Else 
If WinNotExist ahk_exe %GameExe%
{
    runwait,%GameExe%, %GamePath%,,Proccess_ID   
}

SetTimer ChkProcces, 5000                 ;5 second period for checking proccess
Return

#IfWinActive, ahk_group ForThisWinOnly
{

Xbutton2::                                ;Toggle W key, usually handy for autorun and so on.                         
If (bAutorun0 := !bAutorun0) {
    send {w down}
}Else{
    send {w up}
}
Return

Xbutton1::                               ;A other way to toggle keys
If (bAutorun1 = 0)
{
	bAutorun1++
	send {Up down}
	Return
}
If (bAutorun1 = 1)
{
	bAutorun1--
    	send {Up up}
	Return
}
Return

Rbutton:: 
keywait, Rbutton, T0.32
if errorlevel = 1 
{
    while GetKeyState("Rbutton", "P")     ;Triggers if Key is pressed down
    {
        send, {Rbutton down}&&{SomeOtherKey Down}        
        KeyWait, Rbutton && SomeOtherKey
    }
    send, {Rbutton up}&&{SomeOtherKey Up}  
return 
}
else
keywait, Rbutton, D T0.32                 ;Triggers on double cliked
if errorlevel = 0          
{
    send, {SomeOtherKey} 
    return               
 }
else                     
Send, {click right}                       ;Triggers when Clicked once
return Triggers on 
}

ChkProcces:                               ;Close script when procced isn't active anymore
Process, Exist, %Proccess_ID%
If ErrorLevel = 0
Exitapp
Return
