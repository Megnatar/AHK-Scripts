#NoEnv  
#Persistent
;#NoTrayIcon
SetWorkingDir %A_ScriptDir% 
DetectHiddenWindows, on
SetBatchLines, -1
ListLines, off

GetIfName() {
    Nic := Object()
    objWMIService := ComObjGet("winmgmts:{impersonationLevel = impersonate}!\\.\root\cimv2")
    colItems := objWMIService.ExecQuery("SELECT * FROM Win32_NetworkAdapter")._NewEnum, colItems[objItem]
    While (colItems[objItem])
        Nic.Insert(objItem.InterfaceIndex,objItem.NetConnectionID)
    For index, name in Nic {
        colItems := objWMIService.ExecQuery("SELECT * FROM Win32_NetworkAdapterConfiguration WHERE InterfaceIndex = '" index "'")._NewEnum, colItems[objItem]
        If (name && objItem.IPAddress[0])
            nic.Insert(name,objItem.IPAddress[0])
    }
  Return Nic
}
For NicName, IP in GetIfName() { 
}

RunWait, %comspec% /c netsh.exe interface set interface name=%NicName% admin=Disable, %SystemRoot%\System32\,Hide 

GroupAdd, NetAccess, ahk_class MozillaWindowClass
GroupAdd, NetAccess, ahk_class QWidget           
GroupAdd, NetAccess, Windows Update 
GroupAdd, NetAccess, ahk_class Lib_DxGUIDxWindow   
GroupAdd, NetAccess, ahk_class MainWindowClass
GroupAdd, NetAccess, ahk_class SQMainFrame

SetTimer, ChkAppRunning, 150
return

ChkAppRunning:
IfWinNotExist, ahk_group NetAccess
return
IfWinExist, ahk_group NetAccess
{
	runwait, %comspec% /c netsh.exe interface set interface name=%NicName% admin=Enable, %SystemRoot%\System32\,Hide
	WinActivate
	WinWaitClose, ahk_group NetAccess
	IfWinNotExist, ahk_group NetAccess
	runwait, %comspec% /c netsh.exe interface set interface name=%NicName% admin=Disable, %SystemRoot%\System32\,Hide
}
return

